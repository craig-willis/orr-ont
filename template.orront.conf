#
# Template to create /etc/orront.conf, which is used by the application to read the configuration.
# Edit application.conf if you want to indicate a different location for the configuration file.
#

# The ${?...} substitution syntax allows to override settings via environment variables
# See https://github.com/typesafehub/config#optional-system-or-env-variable-overrides

admin {
  password = admin
  password = ${?ADMIN_PASSWORD}

  email    = "admin@example.org"
  email    = ${?ADMIN_EMAIL}
}

branding {
  # used in body of email messages and other places. See also email section below.
  # Note that most of the "branding" is actually done on the front-end side (orr-portal),
  # but we need some pieces here mainly because of the emails that are sent to users
  # for purposes of password reset, username recovery and the like.
  instanceName = "MMI ORR"
}

mongo {
  host = localhost
  host = ${?MONGO_HOST}

  port = 27017
  port = ${?MONGO_PORT}

  db   = orr-ont
  db   = ${?MONGO_DB_NAME}

  # user is optional (with pw required if user is given)
  #user = <user name>
  #pw   = <user password>

  # collection names:
  ontologies    = ontologies
  users         = users
  organizations = organizations
}

files {
  baseDirectory = /opt/orr-ont-base-directory
  baseDirectory = ${?ORR_ONT_BASE_DIR}
}

agraph {
  host = localhost
  host = ${?AGRAPH_HOST}

  port = 10035
  port = ${?AGRAPH_PORT}

  userName = test
  userName = ${?AGRAPH_USERNAME}

  password = "xyzzy"
  password = ${?AGRAPH_PASSWORD}

  repoName  = mmiorr
  repoName = ${?AGRAPH_REPO_NAME}

  sparqlEndpoint = "http://"${agraph.host}":"${agraph.port}/repositories/${agraph.repoName}
}

## --------------------------------------------------------------------------------------------------
## (Required) email related information used for user account management and notifications.
email {
  ## account used for sending emails
  account {
    username = "someone@gmail.com"
    password = "thepassword"
  }

  ## email server parameters
  server {
    host = "smtp.gmail.com"
    port = 465
    prot = "smtps"
    debug = false
  }

  ## info used to compose emails (when user resets password; notifications about registrations):
  from    = "ORR <orr@example.org>"
  replyTo = "orr@example.org"
  mailer  = ${branding.instanceName}
}

# recaptcha: Optional
recaptcha {
  privateKey = "--your google recaptcha secret key--"
}

firebase {
  secret = "?"
}

api {
  secret = "?"
}

// temporary: see AquaImporter
import {
  aquaUsers    = "query request for users"
  aquaOnts     = "query request for ontologies"
  aquaOntFiles = "query request for ontology files"

  aquaUploadsDir = "/opt/MMI-ORR/workspace/bioportal/resources/uploads"

  aquaOnt = "http://mmisw.org/ont"
}

